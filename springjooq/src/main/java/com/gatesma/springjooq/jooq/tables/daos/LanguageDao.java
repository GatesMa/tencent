/*
 * This file is generated by jOOQ.
 */
package com.gatesma.springjooq.jooq.tables.daos;


import com.gatesma.springjooq.jooq.tables.Language;
import com.gatesma.springjooq.jooq.tables.records.LanguageRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.12.3"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class LanguageDao extends DAOImpl<LanguageRecord, com.gatesma.springjooq.jooq.tables.pojos.Language, Integer> {

    /**
     * Create a new LanguageDao without any configuration
     */
    public LanguageDao() {
        super(Language.LANGUAGE, com.gatesma.springjooq.jooq.tables.pojos.Language.class);
    }

    /**
     * Create a new LanguageDao with an attached configuration
     */
    public LanguageDao(Configuration configuration) {
        super(Language.LANGUAGE, com.gatesma.springjooq.jooq.tables.pojos.Language.class, configuration);
    }

    @Override
    public Integer getId(com.gatesma.springjooq.jooq.tables.pojos.Language object) {
        return object.getId();
    }

    /**
     * Fetch records that have <code>id BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gatesma.springjooq.jooq.tables.pojos.Language> fetchRangeOfId(Integer lowerInclusive, Integer upperInclusive) {
        return fetchRange(Language.LANGUAGE.ID, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>id IN (values)</code>
     */
    public List<com.gatesma.springjooq.jooq.tables.pojos.Language> fetchById(Integer... values) {
        return fetch(Language.LANGUAGE.ID, values);
    }

    /**
     * Fetch a unique record that has <code>id = value</code>
     */
    public com.gatesma.springjooq.jooq.tables.pojos.Language fetchOneById(Integer value) {
        return fetchOne(Language.LANGUAGE.ID, value);
    }

    /**
     * Fetch records that have <code>cd BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gatesma.springjooq.jooq.tables.pojos.Language> fetchRangeOfCd(String lowerInclusive, String upperInclusive) {
        return fetchRange(Language.LANGUAGE.CD, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>cd IN (values)</code>
     */
    public List<com.gatesma.springjooq.jooq.tables.pojos.Language> fetchByCd(String... values) {
        return fetch(Language.LANGUAGE.CD, values);
    }

    /**
     * Fetch records that have <code>description BETWEEN lowerInclusive AND upperInclusive</code>
     */
    public List<com.gatesma.springjooq.jooq.tables.pojos.Language> fetchRangeOfDescription(String lowerInclusive, String upperInclusive) {
        return fetchRange(Language.LANGUAGE.DESCRIPTION, lowerInclusive, upperInclusive);
    }

    /**
     * Fetch records that have <code>description IN (values)</code>
     */
    public List<com.gatesma.springjooq.jooq.tables.pojos.Language> fetchByDescription(String... values) {
        return fetch(Language.LANGUAGE.DESCRIPTION, values);
    }
}
