/*
 * This file is generated by jOOQ.
 */
package org.jooq.meta.derby.sys.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.meta.derby.sys.Sys;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Sysconglomerates extends TableImpl<Record> {

    private static final long serialVersionUID = -1829027274;

    /**
     * The reference instance of <code>SYS.SYSCONGLOMERATES</code>
     */
    public static final Sysconglomerates SYSCONGLOMERATES = new Sysconglomerates();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>SYS.SYSCONGLOMERATES.SCHEMAID</code>.
     */
    public static final TableField<Record, String> SCHEMAID = createField(DSL.name("SCHEMAID"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.TABLEID</code>.
     */
    public static final TableField<Record, String> TABLEID = createField(DSL.name("TABLEID"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.CONGLOMERATENUMBER</code>.
     */
    public static final TableField<Record, Long> CONGLOMERATENUMBER = createField(DSL.name("CONGLOMERATENUMBER"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.CONGLOMERATENAME</code>.
     */
    public static final TableField<Record, String> CONGLOMERATENAME = createField(DSL.name("CONGLOMERATENAME"), org.jooq.impl.SQLDataType.VARCHAR(128), SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.ISINDEX</code>.
     */
    public static final TableField<Record, Boolean> ISINDEX = createField(DSL.name("ISINDEX"), org.jooq.impl.SQLDataType.BOOLEAN.nullable(false), SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.DESCRIPTOR</code>.
     */
    public static final TableField<Record, String> DESCRIPTOR = createField(DSL.name("DESCRIPTOR"), org.jooq.impl.SQLDataType.CLOB, SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.ISCONSTRAINT</code>.
     */
    public static final TableField<Record, Boolean> ISCONSTRAINT = createField(DSL.name("ISCONSTRAINT"), org.jooq.impl.SQLDataType.BOOLEAN, SYSCONGLOMERATES, "");

    /**
     * The column <code>SYS.SYSCONGLOMERATES.CONGLOMERATEID</code>.
     */
    public static final TableField<Record, String> CONGLOMERATEID = createField(DSL.name("CONGLOMERATEID"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), SYSCONGLOMERATES, "");

    /**
     * No further instances allowed
     */
    private Sysconglomerates() {
        this(DSL.name("SYSCONGLOMERATES"), null);
    }

    private Sysconglomerates(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Sysconglomerates(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Sysconglomerates(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SYSCONGLOMERATES);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }
}
