/*
 * This file is generated by jOOQ.
 */
package org.jooq.meta.derby.sys.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.meta.derby.sys.Sys;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Syscolumns extends TableImpl<Record> {

    private static final long serialVersionUID = 1350441861;

    /**
     * The reference instance of <code>SYS.SYSCOLUMNS</code>
     */
    public static final Syscolumns SYSCOLUMNS = new Syscolumns();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>SYS.SYSCOLUMNS.REFERENCEID</code>.
     */
    public static final TableField<Record, String> REFERENCEID = createField(DSL.name("REFERENCEID"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.COLUMNNAME</code>.
     */
    public static final TableField<Record, String> COLUMNNAME = createField(DSL.name("COLUMNNAME"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.COLUMNNUMBER</code>.
     */
    public static final TableField<Record, Integer> COLUMNNUMBER = createField(DSL.name("COLUMNNUMBER"), org.jooq.impl.SQLDataType.INTEGER.nullable(false), SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.COLUMNDATATYPE</code>.
     */
    public static final TableField<Record, String> COLUMNDATATYPE = createField(DSL.name("COLUMNDATATYPE"), org.jooq.impl.SQLDataType.CLOB.nullable(false), SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.COLUMNDEFAULT</code>.
     */
    public static final TableField<Record, String> COLUMNDEFAULT = createField(DSL.name("COLUMNDEFAULT"), org.jooq.impl.SQLDataType.CLOB, SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.COLUMNDEFAULTID</code>.
     */
    public static final TableField<Record, String> COLUMNDEFAULTID = createField(DSL.name("COLUMNDEFAULTID"), org.jooq.impl.SQLDataType.CHAR(36), SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.AUTOINCREMENTVALUE</code>.
     */
    public static final TableField<Record, Long> AUTOINCREMENTVALUE = createField(DSL.name("AUTOINCREMENTVALUE"), org.jooq.impl.SQLDataType.BIGINT, SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.AUTOINCREMENTSTART</code>.
     */
    public static final TableField<Record, Long> AUTOINCREMENTSTART = createField(DSL.name("AUTOINCREMENTSTART"), org.jooq.impl.SQLDataType.BIGINT, SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.AUTOINCREMENTINC</code>.
     */
    public static final TableField<Record, Long> AUTOINCREMENTINC = createField(DSL.name("AUTOINCREMENTINC"), org.jooq.impl.SQLDataType.BIGINT, SYSCOLUMNS, "");

    /**
     * The column <code>SYS.SYSCOLUMNS.AUTOINCREMENTCYCLE</code>.
     */
    public static final TableField<Record, Boolean> AUTOINCREMENTCYCLE = createField(DSL.name("AUTOINCREMENTCYCLE"), org.jooq.impl.SQLDataType.BOOLEAN, SYSCOLUMNS, "");

    /**
     * No further instances allowed
     */
    private Syscolumns() {
        this(DSL.name("SYSCOLUMNS"), null);
    }

    private Syscolumns(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Syscolumns(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Syscolumns(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SYSCOLUMNS);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }
}
