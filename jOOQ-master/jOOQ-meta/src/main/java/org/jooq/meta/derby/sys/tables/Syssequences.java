/*
 * This file is generated by jOOQ.
 */
package org.jooq.meta.derby.sys.tables;


import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.TableOptions;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;
import org.jooq.meta.derby.sys.Sys;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Syssequences extends TableImpl<Record> {

    private static final long serialVersionUID = -748272343;

    /**
     * The reference instance of <code>SYS.SYSSEQUENCES</code>
     */
    public static final Syssequences SYSSEQUENCES = new Syssequences();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<Record> getRecordType() {
        return Record.class;
    }

    /**
     * The column <code>SYS.SYSSEQUENCES.SEQUENCEID</code>.
     */
    public static final TableField<Record, String> SEQUENCEID = createField(DSL.name("SEQUENCEID"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.SEQUENCENAME</code>.
     */
    public static final TableField<Record, String> SEQUENCENAME = createField(DSL.name("SEQUENCENAME"), org.jooq.impl.SQLDataType.VARCHAR(128).nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.SCHEMAID</code>.
     */
    public static final TableField<Record, String> SCHEMAID = createField(DSL.name("SCHEMAID"), org.jooq.impl.SQLDataType.CHAR(36).nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.SEQUENCEDATATYPE</code>.
     */
    public static final TableField<Record, String> SEQUENCEDATATYPE = createField(DSL.name("SEQUENCEDATATYPE"), org.jooq.impl.SQLDataType.CLOB.nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.CURRENTVALUE</code>.
     */
    public static final TableField<Record, Long> CURRENTVALUE = createField(DSL.name("CURRENTVALUE"), org.jooq.impl.SQLDataType.BIGINT, SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.STARTVALUE</code>.
     */
    public static final TableField<Record, Long> STARTVALUE = createField(DSL.name("STARTVALUE"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.MINIMUMVALUE</code>.
     */
    public static final TableField<Record, Long> MINIMUMVALUE = createField(DSL.name("MINIMUMVALUE"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.MAXIMUMVALUE</code>.
     */
    public static final TableField<Record, Long> MAXIMUMVALUE = createField(DSL.name("MAXIMUMVALUE"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.INCREMENT</code>.
     */
    public static final TableField<Record, Long> INCREMENT = createField(DSL.name("INCREMENT"), org.jooq.impl.SQLDataType.BIGINT.nullable(false), SYSSEQUENCES, "");

    /**
     * The column <code>SYS.SYSSEQUENCES.CYCLEOPTION</code>.
     */
    public static final TableField<Record, String> CYCLEOPTION = createField(DSL.name("CYCLEOPTION"), org.jooq.impl.SQLDataType.CHAR(1).nullable(false), SYSSEQUENCES, "");

    /**
     * No further instances allowed
     */
    private Syssequences() {
        this(DSL.name("SYSSEQUENCES"), null);
    }

    private Syssequences(Name alias, Table<Record> aliased) {
        this(alias, aliased, null);
    }

    private Syssequences(Name alias, Table<Record> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""), TableOptions.table());
    }

    public <O extends Record> Syssequences(Table<O> child, ForeignKey<O, Record> key) {
        super(child, key, SYSSEQUENCES);
    }

    @Override
    public Schema getSchema() {
        return Sys.SYS;
    }
}
