/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.chart.db;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.example.chart.db.tables.Actor;
import org.jooq.example.chart.db.tables.Address;
import org.jooq.example.chart.db.tables.Category;
import org.jooq.example.chart.db.tables.City;
import org.jooq.example.chart.db.tables.Country;
import org.jooq.example.chart.db.tables.Customer;
import org.jooq.example.chart.db.tables.Film;
import org.jooq.example.chart.db.tables.FilmActor;
import org.jooq.example.chart.db.tables.FilmCategory;
import org.jooq.example.chart.db.tables.Inventory;
import org.jooq.example.chart.db.tables.Language;
import org.jooq.example.chart.db.tables.Payment;
import org.jooq.example.chart.db.tables.PaymentP2007_01;
import org.jooq.example.chart.db.tables.PaymentP2007_02;
import org.jooq.example.chart.db.tables.PaymentP2007_03;
import org.jooq.example.chart.db.tables.PaymentP2007_04;
import org.jooq.example.chart.db.tables.PaymentP2007_05;
import org.jooq.example.chart.db.tables.PaymentP2007_06;
import org.jooq.example.chart.db.tables.Rental;
import org.jooq.example.chart.db.tables.RewardsReport;
import org.jooq.example.chart.db.tables.SchemaVersion;
import org.jooq.example.chart.db.tables.Staff;
import org.jooq.example.chart.db.tables.Store;
import org.jooq.example.chart.db.tables.records.ActorRecord;
import org.jooq.example.chart.db.tables.records.AddressRecord;
import org.jooq.example.chart.db.tables.records.CategoryRecord;
import org.jooq.example.chart.db.tables.records.CityRecord;
import org.jooq.example.chart.db.tables.records.CountryRecord;
import org.jooq.example.chart.db.tables.records.CustomerRecord;
import org.jooq.example.chart.db.tables.records.FilmActorRecord;
import org.jooq.example.chart.db.tables.records.FilmCategoryRecord;
import org.jooq.example.chart.db.tables.records.FilmRecord;
import org.jooq.example.chart.db.tables.records.InventoryRecord;
import org.jooq.example.chart.db.tables.records.LanguageRecord;
import org.jooq.example.chart.db.tables.records.PaymentP2007_01Record;
import org.jooq.example.chart.db.tables.records.PaymentP2007_02Record;
import org.jooq.example.chart.db.tables.records.PaymentP2007_03Record;
import org.jooq.example.chart.db.tables.records.PaymentP2007_04Record;
import org.jooq.example.chart.db.tables.records.PaymentP2007_05Record;
import org.jooq.example.chart.db.tables.records.PaymentP2007_06Record;
import org.jooq.example.chart.db.tables.records.PaymentRecord;
import org.jooq.example.chart.db.tables.records.RentalRecord;
import org.jooq.example.chart.db.tables.records.RewardsReportRecord;
import org.jooq.example.chart.db.tables.records.SchemaVersionRecord;
import org.jooq.example.chart.db.tables.records.StaffRecord;
import org.jooq.example.chart.db.tables.records.StoreRecord;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ActorRecord, Integer> IDENTITY_ACTOR = Identities0.IDENTITY_ACTOR;
    public static final Identity<AddressRecord, Integer> IDENTITY_ADDRESS = Identities0.IDENTITY_ADDRESS;
    public static final Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = Identities0.IDENTITY_CATEGORY;
    public static final Identity<CityRecord, Integer> IDENTITY_CITY = Identities0.IDENTITY_CITY;
    public static final Identity<CountryRecord, Integer> IDENTITY_COUNTRY = Identities0.IDENTITY_COUNTRY;
    public static final Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Identities0.IDENTITY_CUSTOMER;
    public static final Identity<FilmRecord, Integer> IDENTITY_FILM = Identities0.IDENTITY_FILM;
    public static final Identity<InventoryRecord, Integer> IDENTITY_INVENTORY = Identities0.IDENTITY_INVENTORY;
    public static final Identity<LanguageRecord, Integer> IDENTITY_LANGUAGE = Identities0.IDENTITY_LANGUAGE;
    public static final Identity<PaymentRecord, Integer> IDENTITY_PAYMENT = Identities0.IDENTITY_PAYMENT;
    public static final Identity<PaymentP2007_01Record, Integer> IDENTITY_PAYMENT_P2007_01 = Identities0.IDENTITY_PAYMENT_P2007_01;
    public static final Identity<PaymentP2007_02Record, Integer> IDENTITY_PAYMENT_P2007_02 = Identities0.IDENTITY_PAYMENT_P2007_02;
    public static final Identity<PaymentP2007_03Record, Integer> IDENTITY_PAYMENT_P2007_03 = Identities0.IDENTITY_PAYMENT_P2007_03;
    public static final Identity<PaymentP2007_04Record, Integer> IDENTITY_PAYMENT_P2007_04 = Identities0.IDENTITY_PAYMENT_P2007_04;
    public static final Identity<PaymentP2007_05Record, Integer> IDENTITY_PAYMENT_P2007_05 = Identities0.IDENTITY_PAYMENT_P2007_05;
    public static final Identity<PaymentP2007_06Record, Integer> IDENTITY_PAYMENT_P2007_06 = Identities0.IDENTITY_PAYMENT_P2007_06;
    public static final Identity<RentalRecord, Integer> IDENTITY_RENTAL = Identities0.IDENTITY_RENTAL;
    public static final Identity<RewardsReportRecord, Integer> IDENTITY_REWARDS_REPORT = Identities0.IDENTITY_REWARDS_REPORT;
    public static final Identity<StaffRecord, Integer> IDENTITY_STAFF = Identities0.IDENTITY_STAFF;
    public static final Identity<StoreRecord, Integer> IDENTITY_STORE = Identities0.IDENTITY_STORE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ActorRecord> ACTOR_PKEY = UniqueKeys0.ACTOR_PKEY;
    public static final UniqueKey<AddressRecord> ADDRESS_PKEY = UniqueKeys0.ADDRESS_PKEY;
    public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = UniqueKeys0.CATEGORY_PKEY;
    public static final UniqueKey<CityRecord> CITY_PKEY = UniqueKeys0.CITY_PKEY;
    public static final UniqueKey<CountryRecord> COUNTRY_PKEY = UniqueKeys0.COUNTRY_PKEY;
    public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = UniqueKeys0.CUSTOMER_PKEY;
    public static final UniqueKey<FilmRecord> FILM_PKEY = UniqueKeys0.FILM_PKEY;
    public static final UniqueKey<FilmActorRecord> FILM_ACTOR_PKEY = UniqueKeys0.FILM_ACTOR_PKEY;
    public static final UniqueKey<FilmCategoryRecord> FILM_CATEGORY_PKEY = UniqueKeys0.FILM_CATEGORY_PKEY;
    public static final UniqueKey<InventoryRecord> INVENTORY_PKEY = UniqueKeys0.INVENTORY_PKEY;
    public static final UniqueKey<LanguageRecord> LANGUAGE_PKEY = UniqueKeys0.LANGUAGE_PKEY;
    public static final UniqueKey<PaymentRecord> PAYMENT_PKEY = UniqueKeys0.PAYMENT_PKEY;
    public static final UniqueKey<RentalRecord> RENTAL_PKEY = UniqueKeys0.RENTAL_PKEY;
    public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = UniqueKeys0.SCHEMA_VERSION_PK;
    public static final UniqueKey<StaffRecord> STAFF_PKEY = UniqueKeys0.STAFF_PKEY;
    public static final UniqueKey<StoreRecord> STORE_PKEY = UniqueKeys0.STORE_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AddressRecord, CityRecord> ADDRESS__ADDRESS_CITY_ID_FKEY = ForeignKeys0.ADDRESS__ADDRESS_CITY_ID_FKEY;
    public static final ForeignKey<CityRecord, CountryRecord> CITY__CITY_COUNTRY_ID_FKEY = ForeignKeys0.CITY__CITY_COUNTRY_ID_FKEY;
    public static final ForeignKey<CustomerRecord, StoreRecord> CUSTOMER__CUSTOMER_STORE_ID_FKEY = ForeignKeys0.CUSTOMER__CUSTOMER_STORE_ID_FKEY;
    public static final ForeignKey<CustomerRecord, AddressRecord> CUSTOMER__CUSTOMER_ADDRESS_ID_FKEY = ForeignKeys0.CUSTOMER__CUSTOMER_ADDRESS_ID_FKEY;
    public static final ForeignKey<FilmRecord, LanguageRecord> FILM__FILM_LANGUAGE_ID_FKEY = ForeignKeys0.FILM__FILM_LANGUAGE_ID_FKEY;
    public static final ForeignKey<FilmRecord, LanguageRecord> FILM__FILM_ORIGINAL_LANGUAGE_ID_FKEY = ForeignKeys0.FILM__FILM_ORIGINAL_LANGUAGE_ID_FKEY;
    public static final ForeignKey<FilmActorRecord, ActorRecord> FILM_ACTOR__FILM_ACTOR_ACTOR_ID_FKEY = ForeignKeys0.FILM_ACTOR__FILM_ACTOR_ACTOR_ID_FKEY;
    public static final ForeignKey<FilmActorRecord, FilmRecord> FILM_ACTOR__FILM_ACTOR_FILM_ID_FKEY = ForeignKeys0.FILM_ACTOR__FILM_ACTOR_FILM_ID_FKEY;
    public static final ForeignKey<FilmCategoryRecord, FilmRecord> FILM_CATEGORY__FILM_CATEGORY_FILM_ID_FKEY = ForeignKeys0.FILM_CATEGORY__FILM_CATEGORY_FILM_ID_FKEY;
    public static final ForeignKey<FilmCategoryRecord, CategoryRecord> FILM_CATEGORY__FILM_CATEGORY_CATEGORY_ID_FKEY = ForeignKeys0.FILM_CATEGORY__FILM_CATEGORY_CATEGORY_ID_FKEY;
    public static final ForeignKey<InventoryRecord, FilmRecord> INVENTORY__INVENTORY_FILM_ID_FKEY = ForeignKeys0.INVENTORY__INVENTORY_FILM_ID_FKEY;
    public static final ForeignKey<InventoryRecord, StoreRecord> INVENTORY__INVENTORY_STORE_ID_FKEY = ForeignKeys0.INVENTORY__INVENTORY_STORE_ID_FKEY;
    public static final ForeignKey<PaymentRecord, CustomerRecord> PAYMENT__PAYMENT_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT__PAYMENT_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentRecord, StaffRecord> PAYMENT__PAYMENT_STAFF_ID_FKEY = ForeignKeys0.PAYMENT__PAYMENT_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentRecord, RentalRecord> PAYMENT__PAYMENT_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT__PAYMENT_RENTAL_ID_FKEY;
    public static final ForeignKey<PaymentP2007_01Record, CustomerRecord> PAYMENT_P2007_01__PAYMENT_P2007_01_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT_P2007_01__PAYMENT_P2007_01_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentP2007_01Record, StaffRecord> PAYMENT_P2007_01__PAYMENT_P2007_01_STAFF_ID_FKEY = ForeignKeys0.PAYMENT_P2007_01__PAYMENT_P2007_01_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentP2007_01Record, RentalRecord> PAYMENT_P2007_01__PAYMENT_P2007_01_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT_P2007_01__PAYMENT_P2007_01_RENTAL_ID_FKEY;
    public static final ForeignKey<PaymentP2007_02Record, CustomerRecord> PAYMENT_P2007_02__PAYMENT_P2007_02_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT_P2007_02__PAYMENT_P2007_02_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentP2007_02Record, StaffRecord> PAYMENT_P2007_02__PAYMENT_P2007_02_STAFF_ID_FKEY = ForeignKeys0.PAYMENT_P2007_02__PAYMENT_P2007_02_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentP2007_02Record, RentalRecord> PAYMENT_P2007_02__PAYMENT_P2007_02_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT_P2007_02__PAYMENT_P2007_02_RENTAL_ID_FKEY;
    public static final ForeignKey<PaymentP2007_03Record, CustomerRecord> PAYMENT_P2007_03__PAYMENT_P2007_03_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT_P2007_03__PAYMENT_P2007_03_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentP2007_03Record, StaffRecord> PAYMENT_P2007_03__PAYMENT_P2007_03_STAFF_ID_FKEY = ForeignKeys0.PAYMENT_P2007_03__PAYMENT_P2007_03_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentP2007_03Record, RentalRecord> PAYMENT_P2007_03__PAYMENT_P2007_03_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT_P2007_03__PAYMENT_P2007_03_RENTAL_ID_FKEY;
    public static final ForeignKey<PaymentP2007_04Record, CustomerRecord> PAYMENT_P2007_04__PAYMENT_P2007_04_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT_P2007_04__PAYMENT_P2007_04_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentP2007_04Record, StaffRecord> PAYMENT_P2007_04__PAYMENT_P2007_04_STAFF_ID_FKEY = ForeignKeys0.PAYMENT_P2007_04__PAYMENT_P2007_04_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentP2007_04Record, RentalRecord> PAYMENT_P2007_04__PAYMENT_P2007_04_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT_P2007_04__PAYMENT_P2007_04_RENTAL_ID_FKEY;
    public static final ForeignKey<PaymentP2007_05Record, CustomerRecord> PAYMENT_P2007_05__PAYMENT_P2007_05_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT_P2007_05__PAYMENT_P2007_05_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentP2007_05Record, StaffRecord> PAYMENT_P2007_05__PAYMENT_P2007_05_STAFF_ID_FKEY = ForeignKeys0.PAYMENT_P2007_05__PAYMENT_P2007_05_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentP2007_05Record, RentalRecord> PAYMENT_P2007_05__PAYMENT_P2007_05_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT_P2007_05__PAYMENT_P2007_05_RENTAL_ID_FKEY;
    public static final ForeignKey<PaymentP2007_06Record, CustomerRecord> PAYMENT_P2007_06__PAYMENT_P2007_06_CUSTOMER_ID_FKEY = ForeignKeys0.PAYMENT_P2007_06__PAYMENT_P2007_06_CUSTOMER_ID_FKEY;
    public static final ForeignKey<PaymentP2007_06Record, StaffRecord> PAYMENT_P2007_06__PAYMENT_P2007_06_STAFF_ID_FKEY = ForeignKeys0.PAYMENT_P2007_06__PAYMENT_P2007_06_STAFF_ID_FKEY;
    public static final ForeignKey<PaymentP2007_06Record, RentalRecord> PAYMENT_P2007_06__PAYMENT_P2007_06_RENTAL_ID_FKEY = ForeignKeys0.PAYMENT_P2007_06__PAYMENT_P2007_06_RENTAL_ID_FKEY;
    public static final ForeignKey<RentalRecord, InventoryRecord> RENTAL__RENTAL_INVENTORY_ID_FKEY = ForeignKeys0.RENTAL__RENTAL_INVENTORY_ID_FKEY;
    public static final ForeignKey<RentalRecord, CustomerRecord> RENTAL__RENTAL_CUSTOMER_ID_FKEY = ForeignKeys0.RENTAL__RENTAL_CUSTOMER_ID_FKEY;
    public static final ForeignKey<RentalRecord, StaffRecord> RENTAL__RENTAL_STAFF_ID_FKEY = ForeignKeys0.RENTAL__RENTAL_STAFF_ID_FKEY;
    public static final ForeignKey<StaffRecord, AddressRecord> STAFF__STAFF_ADDRESS_ID_FKEY = ForeignKeys0.STAFF__STAFF_ADDRESS_ID_FKEY;
    public static final ForeignKey<StaffRecord, StoreRecord> STAFF__STAFF_STORE_ID_FKEY = ForeignKeys0.STAFF__STAFF_STORE_ID_FKEY;
    public static final ForeignKey<StoreRecord, StaffRecord> STORE__STORE_MANAGER_STAFF_ID_FKEY = ForeignKeys0.STORE__STORE_MANAGER_STAFF_ID_FKEY;
    public static final ForeignKey<StoreRecord, AddressRecord> STORE__STORE_ADDRESS_ID_FKEY = ForeignKeys0.STORE__STORE_ADDRESS_ID_FKEY;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ActorRecord, Integer> IDENTITY_ACTOR = Internal.createIdentity(Actor.ACTOR, Actor.ACTOR.ACTOR_ID);
        public static Identity<AddressRecord, Integer> IDENTITY_ADDRESS = Internal.createIdentity(Address.ADDRESS, Address.ADDRESS.ADDRESS_ID);
        public static Identity<CategoryRecord, Integer> IDENTITY_CATEGORY = Internal.createIdentity(Category.CATEGORY, Category.CATEGORY.CATEGORY_ID);
        public static Identity<CityRecord, Integer> IDENTITY_CITY = Internal.createIdentity(City.CITY, City.CITY.CITY_ID);
        public static Identity<CountryRecord, Integer> IDENTITY_COUNTRY = Internal.createIdentity(Country.COUNTRY, Country.COUNTRY.COUNTRY_ID);
        public static Identity<CustomerRecord, Integer> IDENTITY_CUSTOMER = Internal.createIdentity(Customer.CUSTOMER, Customer.CUSTOMER.CUSTOMER_ID);
        public static Identity<FilmRecord, Integer> IDENTITY_FILM = Internal.createIdentity(Film.FILM, Film.FILM.FILM_ID);
        public static Identity<InventoryRecord, Integer> IDENTITY_INVENTORY = Internal.createIdentity(Inventory.INVENTORY, Inventory.INVENTORY.INVENTORY_ID);
        public static Identity<LanguageRecord, Integer> IDENTITY_LANGUAGE = Internal.createIdentity(Language.LANGUAGE, Language.LANGUAGE.LANGUAGE_ID);
        public static Identity<PaymentRecord, Integer> IDENTITY_PAYMENT = Internal.createIdentity(Payment.PAYMENT, Payment.PAYMENT.PAYMENT_ID);
        public static Identity<PaymentP2007_01Record, Integer> IDENTITY_PAYMENT_P2007_01 = Internal.createIdentity(PaymentP2007_01.PAYMENT_P2007_01, PaymentP2007_01.PAYMENT_P2007_01.PAYMENT_ID);
        public static Identity<PaymentP2007_02Record, Integer> IDENTITY_PAYMENT_P2007_02 = Internal.createIdentity(PaymentP2007_02.PAYMENT_P2007_02, PaymentP2007_02.PAYMENT_P2007_02.PAYMENT_ID);
        public static Identity<PaymentP2007_03Record, Integer> IDENTITY_PAYMENT_P2007_03 = Internal.createIdentity(PaymentP2007_03.PAYMENT_P2007_03, PaymentP2007_03.PAYMENT_P2007_03.PAYMENT_ID);
        public static Identity<PaymentP2007_04Record, Integer> IDENTITY_PAYMENT_P2007_04 = Internal.createIdentity(PaymentP2007_04.PAYMENT_P2007_04, PaymentP2007_04.PAYMENT_P2007_04.PAYMENT_ID);
        public static Identity<PaymentP2007_05Record, Integer> IDENTITY_PAYMENT_P2007_05 = Internal.createIdentity(PaymentP2007_05.PAYMENT_P2007_05, PaymentP2007_05.PAYMENT_P2007_05.PAYMENT_ID);
        public static Identity<PaymentP2007_06Record, Integer> IDENTITY_PAYMENT_P2007_06 = Internal.createIdentity(PaymentP2007_06.PAYMENT_P2007_06, PaymentP2007_06.PAYMENT_P2007_06.PAYMENT_ID);
        public static Identity<RentalRecord, Integer> IDENTITY_RENTAL = Internal.createIdentity(Rental.RENTAL, Rental.RENTAL.RENTAL_ID);
        public static Identity<RewardsReportRecord, Integer> IDENTITY_REWARDS_REPORT = Internal.createIdentity(RewardsReport.REWARDS_REPORT, RewardsReport.REWARDS_REPORT.CUSTOMER_ID);
        public static Identity<StaffRecord, Integer> IDENTITY_STAFF = Internal.createIdentity(Staff.STAFF, Staff.STAFF.STAFF_ID);
        public static Identity<StoreRecord, Integer> IDENTITY_STORE = Internal.createIdentity(Store.STORE, Store.STORE.STORE_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ActorRecord> ACTOR_PKEY = Internal.createUniqueKey(Actor.ACTOR, "actor_pkey", new TableField[] { Actor.ACTOR.ACTOR_ID }, true);
        public static final UniqueKey<AddressRecord> ADDRESS_PKEY = Internal.createUniqueKey(Address.ADDRESS, "address_pkey", new TableField[] { Address.ADDRESS.ADDRESS_ID }, true);
        public static final UniqueKey<CategoryRecord> CATEGORY_PKEY = Internal.createUniqueKey(Category.CATEGORY, "category_pkey", new TableField[] { Category.CATEGORY.CATEGORY_ID }, true);
        public static final UniqueKey<CityRecord> CITY_PKEY = Internal.createUniqueKey(City.CITY, "city_pkey", new TableField[] { City.CITY.CITY_ID }, true);
        public static final UniqueKey<CountryRecord> COUNTRY_PKEY = Internal.createUniqueKey(Country.COUNTRY, "country_pkey", new TableField[] { Country.COUNTRY.COUNTRY_ID }, true);
        public static final UniqueKey<CustomerRecord> CUSTOMER_PKEY = Internal.createUniqueKey(Customer.CUSTOMER, "customer_pkey", new TableField[] { Customer.CUSTOMER.CUSTOMER_ID }, true);
        public static final UniqueKey<FilmRecord> FILM_PKEY = Internal.createUniqueKey(Film.FILM, "film_pkey", new TableField[] { Film.FILM.FILM_ID }, true);
        public static final UniqueKey<FilmActorRecord> FILM_ACTOR_PKEY = Internal.createUniqueKey(FilmActor.FILM_ACTOR, "film_actor_pkey", new TableField[] { FilmActor.FILM_ACTOR.ACTOR_ID, FilmActor.FILM_ACTOR.FILM_ID }, true);
        public static final UniqueKey<FilmCategoryRecord> FILM_CATEGORY_PKEY = Internal.createUniqueKey(FilmCategory.FILM_CATEGORY, "film_category_pkey", new TableField[] { FilmCategory.FILM_CATEGORY.FILM_ID, FilmCategory.FILM_CATEGORY.CATEGORY_ID }, true);
        public static final UniqueKey<InventoryRecord> INVENTORY_PKEY = Internal.createUniqueKey(Inventory.INVENTORY, "inventory_pkey", new TableField[] { Inventory.INVENTORY.INVENTORY_ID }, true);
        public static final UniqueKey<LanguageRecord> LANGUAGE_PKEY = Internal.createUniqueKey(Language.LANGUAGE, "language_pkey", new TableField[] { Language.LANGUAGE.LANGUAGE_ID }, true);
        public static final UniqueKey<PaymentRecord> PAYMENT_PKEY = Internal.createUniqueKey(Payment.PAYMENT, "payment_pkey", new TableField[] { Payment.PAYMENT.PAYMENT_ID }, true);
        public static final UniqueKey<RentalRecord> RENTAL_PKEY = Internal.createUniqueKey(Rental.RENTAL, "rental_pkey", new TableField[] { Rental.RENTAL.RENTAL_ID }, true);
        public static final UniqueKey<SchemaVersionRecord> SCHEMA_VERSION_PK = Internal.createUniqueKey(SchemaVersion.SCHEMA_VERSION, "schema_version_pk", new TableField[] { SchemaVersion.SCHEMA_VERSION.VERSION }, true);
        public static final UniqueKey<StaffRecord> STAFF_PKEY = Internal.createUniqueKey(Staff.STAFF, "staff_pkey", new TableField[] { Staff.STAFF.STAFF_ID }, true);
        public static final UniqueKey<StoreRecord> STORE_PKEY = Internal.createUniqueKey(Store.STORE, "store_pkey", new TableField[] { Store.STORE.STORE_ID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<AddressRecord, CityRecord> ADDRESS__ADDRESS_CITY_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CITY_PKEY, Address.ADDRESS, "address__address_city_id_fkey", new TableField[] { Address.ADDRESS.CITY_ID }, true);
        public static final ForeignKey<CityRecord, CountryRecord> CITY__CITY_COUNTRY_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.COUNTRY_PKEY, City.CITY, "city__city_country_id_fkey", new TableField[] { City.CITY.COUNTRY_ID }, true);
        public static final ForeignKey<CustomerRecord, StoreRecord> CUSTOMER__CUSTOMER_STORE_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STORE_PKEY, Customer.CUSTOMER, "customer__customer_store_id_fkey", new TableField[] { Customer.CUSTOMER.STORE_ID }, true);
        public static final ForeignKey<CustomerRecord, AddressRecord> CUSTOMER__CUSTOMER_ADDRESS_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.ADDRESS_PKEY, Customer.CUSTOMER, "customer__customer_address_id_fkey", new TableField[] { Customer.CUSTOMER.ADDRESS_ID }, true);
        public static final ForeignKey<FilmRecord, LanguageRecord> FILM__FILM_LANGUAGE_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.LANGUAGE_PKEY, Film.FILM, "film__film_language_id_fkey", new TableField[] { Film.FILM.LANGUAGE_ID }, true);
        public static final ForeignKey<FilmRecord, LanguageRecord> FILM__FILM_ORIGINAL_LANGUAGE_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.LANGUAGE_PKEY, Film.FILM, "film__film_original_language_id_fkey", new TableField[] { Film.FILM.ORIGINAL_LANGUAGE_ID }, true);
        public static final ForeignKey<FilmActorRecord, ActorRecord> FILM_ACTOR__FILM_ACTOR_ACTOR_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.ACTOR_PKEY, FilmActor.FILM_ACTOR, "film_actor__film_actor_actor_id_fkey", new TableField[] { FilmActor.FILM_ACTOR.ACTOR_ID }, true);
        public static final ForeignKey<FilmActorRecord, FilmRecord> FILM_ACTOR__FILM_ACTOR_FILM_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.FILM_PKEY, FilmActor.FILM_ACTOR, "film_actor__film_actor_film_id_fkey", new TableField[] { FilmActor.FILM_ACTOR.FILM_ID }, true);
        public static final ForeignKey<FilmCategoryRecord, FilmRecord> FILM_CATEGORY__FILM_CATEGORY_FILM_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.FILM_PKEY, FilmCategory.FILM_CATEGORY, "film_category__film_category_film_id_fkey", new TableField[] { FilmCategory.FILM_CATEGORY.FILM_ID }, true);
        public static final ForeignKey<FilmCategoryRecord, CategoryRecord> FILM_CATEGORY__FILM_CATEGORY_CATEGORY_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CATEGORY_PKEY, FilmCategory.FILM_CATEGORY, "film_category__film_category_category_id_fkey", new TableField[] { FilmCategory.FILM_CATEGORY.CATEGORY_ID }, true);
        public static final ForeignKey<InventoryRecord, FilmRecord> INVENTORY__INVENTORY_FILM_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.FILM_PKEY, Inventory.INVENTORY, "inventory__inventory_film_id_fkey", new TableField[] { Inventory.INVENTORY.FILM_ID }, true);
        public static final ForeignKey<InventoryRecord, StoreRecord> INVENTORY__INVENTORY_STORE_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STORE_PKEY, Inventory.INVENTORY, "inventory__inventory_store_id_fkey", new TableField[] { Inventory.INVENTORY.STORE_ID }, true);
        public static final ForeignKey<PaymentRecord, CustomerRecord> PAYMENT__PAYMENT_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, Payment.PAYMENT, "payment__payment_customer_id_fkey", new TableField[] { Payment.PAYMENT.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentRecord, StaffRecord> PAYMENT__PAYMENT_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, Payment.PAYMENT, "payment__payment_staff_id_fkey", new TableField[] { Payment.PAYMENT.STAFF_ID }, true);
        public static final ForeignKey<PaymentRecord, RentalRecord> PAYMENT__PAYMENT_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, Payment.PAYMENT, "payment__payment_rental_id_fkey", new TableField[] { Payment.PAYMENT.RENTAL_ID }, true);
        public static final ForeignKey<PaymentP2007_01Record, CustomerRecord> PAYMENT_P2007_01__PAYMENT_P2007_01_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, PaymentP2007_01.PAYMENT_P2007_01, "payment_p2007_01__payment_p2007_01_customer_id_fkey", new TableField[] { PaymentP2007_01.PAYMENT_P2007_01.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentP2007_01Record, StaffRecord> PAYMENT_P2007_01__PAYMENT_P2007_01_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, PaymentP2007_01.PAYMENT_P2007_01, "payment_p2007_01__payment_p2007_01_staff_id_fkey", new TableField[] { PaymentP2007_01.PAYMENT_P2007_01.STAFF_ID }, true);
        public static final ForeignKey<PaymentP2007_01Record, RentalRecord> PAYMENT_P2007_01__PAYMENT_P2007_01_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, PaymentP2007_01.PAYMENT_P2007_01, "payment_p2007_01__payment_p2007_01_rental_id_fkey", new TableField[] { PaymentP2007_01.PAYMENT_P2007_01.RENTAL_ID }, true);
        public static final ForeignKey<PaymentP2007_02Record, CustomerRecord> PAYMENT_P2007_02__PAYMENT_P2007_02_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, PaymentP2007_02.PAYMENT_P2007_02, "payment_p2007_02__payment_p2007_02_customer_id_fkey", new TableField[] { PaymentP2007_02.PAYMENT_P2007_02.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentP2007_02Record, StaffRecord> PAYMENT_P2007_02__PAYMENT_P2007_02_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, PaymentP2007_02.PAYMENT_P2007_02, "payment_p2007_02__payment_p2007_02_staff_id_fkey", new TableField[] { PaymentP2007_02.PAYMENT_P2007_02.STAFF_ID }, true);
        public static final ForeignKey<PaymentP2007_02Record, RentalRecord> PAYMENT_P2007_02__PAYMENT_P2007_02_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, PaymentP2007_02.PAYMENT_P2007_02, "payment_p2007_02__payment_p2007_02_rental_id_fkey", new TableField[] { PaymentP2007_02.PAYMENT_P2007_02.RENTAL_ID }, true);
        public static final ForeignKey<PaymentP2007_03Record, CustomerRecord> PAYMENT_P2007_03__PAYMENT_P2007_03_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, PaymentP2007_03.PAYMENT_P2007_03, "payment_p2007_03__payment_p2007_03_customer_id_fkey", new TableField[] { PaymentP2007_03.PAYMENT_P2007_03.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentP2007_03Record, StaffRecord> PAYMENT_P2007_03__PAYMENT_P2007_03_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, PaymentP2007_03.PAYMENT_P2007_03, "payment_p2007_03__payment_p2007_03_staff_id_fkey", new TableField[] { PaymentP2007_03.PAYMENT_P2007_03.STAFF_ID }, true);
        public static final ForeignKey<PaymentP2007_03Record, RentalRecord> PAYMENT_P2007_03__PAYMENT_P2007_03_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, PaymentP2007_03.PAYMENT_P2007_03, "payment_p2007_03__payment_p2007_03_rental_id_fkey", new TableField[] { PaymentP2007_03.PAYMENT_P2007_03.RENTAL_ID }, true);
        public static final ForeignKey<PaymentP2007_04Record, CustomerRecord> PAYMENT_P2007_04__PAYMENT_P2007_04_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, PaymentP2007_04.PAYMENT_P2007_04, "payment_p2007_04__payment_p2007_04_customer_id_fkey", new TableField[] { PaymentP2007_04.PAYMENT_P2007_04.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentP2007_04Record, StaffRecord> PAYMENT_P2007_04__PAYMENT_P2007_04_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, PaymentP2007_04.PAYMENT_P2007_04, "payment_p2007_04__payment_p2007_04_staff_id_fkey", new TableField[] { PaymentP2007_04.PAYMENT_P2007_04.STAFF_ID }, true);
        public static final ForeignKey<PaymentP2007_04Record, RentalRecord> PAYMENT_P2007_04__PAYMENT_P2007_04_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, PaymentP2007_04.PAYMENT_P2007_04, "payment_p2007_04__payment_p2007_04_rental_id_fkey", new TableField[] { PaymentP2007_04.PAYMENT_P2007_04.RENTAL_ID }, true);
        public static final ForeignKey<PaymentP2007_05Record, CustomerRecord> PAYMENT_P2007_05__PAYMENT_P2007_05_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, PaymentP2007_05.PAYMENT_P2007_05, "payment_p2007_05__payment_p2007_05_customer_id_fkey", new TableField[] { PaymentP2007_05.PAYMENT_P2007_05.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentP2007_05Record, StaffRecord> PAYMENT_P2007_05__PAYMENT_P2007_05_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, PaymentP2007_05.PAYMENT_P2007_05, "payment_p2007_05__payment_p2007_05_staff_id_fkey", new TableField[] { PaymentP2007_05.PAYMENT_P2007_05.STAFF_ID }, true);
        public static final ForeignKey<PaymentP2007_05Record, RentalRecord> PAYMENT_P2007_05__PAYMENT_P2007_05_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, PaymentP2007_05.PAYMENT_P2007_05, "payment_p2007_05__payment_p2007_05_rental_id_fkey", new TableField[] { PaymentP2007_05.PAYMENT_P2007_05.RENTAL_ID }, true);
        public static final ForeignKey<PaymentP2007_06Record, CustomerRecord> PAYMENT_P2007_06__PAYMENT_P2007_06_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, PaymentP2007_06.PAYMENT_P2007_06, "payment_p2007_06__payment_p2007_06_customer_id_fkey", new TableField[] { PaymentP2007_06.PAYMENT_P2007_06.CUSTOMER_ID }, true);
        public static final ForeignKey<PaymentP2007_06Record, StaffRecord> PAYMENT_P2007_06__PAYMENT_P2007_06_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, PaymentP2007_06.PAYMENT_P2007_06, "payment_p2007_06__payment_p2007_06_staff_id_fkey", new TableField[] { PaymentP2007_06.PAYMENT_P2007_06.STAFF_ID }, true);
        public static final ForeignKey<PaymentP2007_06Record, RentalRecord> PAYMENT_P2007_06__PAYMENT_P2007_06_RENTAL_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.RENTAL_PKEY, PaymentP2007_06.PAYMENT_P2007_06, "payment_p2007_06__payment_p2007_06_rental_id_fkey", new TableField[] { PaymentP2007_06.PAYMENT_P2007_06.RENTAL_ID }, true);
        public static final ForeignKey<RentalRecord, InventoryRecord> RENTAL__RENTAL_INVENTORY_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.INVENTORY_PKEY, Rental.RENTAL, "rental__rental_inventory_id_fkey", new TableField[] { Rental.RENTAL.INVENTORY_ID }, true);
        public static final ForeignKey<RentalRecord, CustomerRecord> RENTAL__RENTAL_CUSTOMER_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.CUSTOMER_PKEY, Rental.RENTAL, "rental__rental_customer_id_fkey", new TableField[] { Rental.RENTAL.CUSTOMER_ID }, true);
        public static final ForeignKey<RentalRecord, StaffRecord> RENTAL__RENTAL_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, Rental.RENTAL, "rental__rental_staff_id_fkey", new TableField[] { Rental.RENTAL.STAFF_ID }, true);
        public static final ForeignKey<StaffRecord, AddressRecord> STAFF__STAFF_ADDRESS_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.ADDRESS_PKEY, Staff.STAFF, "staff__staff_address_id_fkey", new TableField[] { Staff.STAFF.ADDRESS_ID }, true);
        public static final ForeignKey<StaffRecord, StoreRecord> STAFF__STAFF_STORE_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STORE_PKEY, Staff.STAFF, "staff__staff_store_id_fkey", new TableField[] { Staff.STAFF.STORE_ID }, true);
        public static final ForeignKey<StoreRecord, StaffRecord> STORE__STORE_MANAGER_STAFF_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.STAFF_PKEY, Store.STORE, "store__store_manager_staff_id_fkey", new TableField[] { Store.STORE.MANAGER_STAFF_ID }, true);
        public static final ForeignKey<StoreRecord, AddressRecord> STORE__STORE_ADDRESS_ID_FKEY = Internal.createForeignKey(org.jooq.example.chart.db.Keys.ADDRESS_PKEY, Store.STORE, "store__store_address_id_fkey", new TableField[] { Store.STORE.ADDRESS_ID }, true);
    }
}
