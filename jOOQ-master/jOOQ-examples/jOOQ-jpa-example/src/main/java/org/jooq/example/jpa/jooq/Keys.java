/*
 * This file is generated by jOOQ.
 */
package org.jooq.example.jpa.jooq;


import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.example.jpa.jooq.tables.Actor;
import org.jooq.example.jpa.jooq.tables.Film;
import org.jooq.example.jpa.jooq.tables.FilmActor;
import org.jooq.example.jpa.jooq.tables.Language;
import org.jooq.example.jpa.jooq.tables.records.ActorRecord;
import org.jooq.example.jpa.jooq.tables.records.FilmActorRecord;
import org.jooq.example.jpa.jooq.tables.records.FilmRecord;
import org.jooq.example.jpa.jooq.tables.records.LanguageRecord;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code></code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<ActorRecord, Integer> IDENTITY_ACTOR = Identities0.IDENTITY_ACTOR;
    public static final Identity<FilmRecord, Integer> IDENTITY_FILM = Identities0.IDENTITY_FILM;
    public static final Identity<LanguageRecord, Integer> IDENTITY_LANGUAGE = Identities0.IDENTITY_LANGUAGE;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<ActorRecord> CONSTRAINT_3 = UniqueKeys0.CONSTRAINT_3;
    public static final UniqueKey<FilmRecord> CONSTRAINT_2 = UniqueKeys0.CONSTRAINT_2;
    public static final UniqueKey<FilmActorRecord> CONSTRAINT_7 = UniqueKeys0.CONSTRAINT_7;
    public static final UniqueKey<LanguageRecord> CONSTRAINT_C = UniqueKeys0.CONSTRAINT_C;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<FilmRecord, LanguageRecord> FKD2YJC1RU34H1SMWLA3FX7B6NX = ForeignKeys0.FKD2YJC1RU34H1SMWLA3FX7B6NX;
    public static final ForeignKey<FilmRecord, LanguageRecord> FKN2UB730RPO5B5E9X6U2LWL9FT = ForeignKeys0.FKN2UB730RPO5B5E9X6U2LWL9FT;
    public static final ForeignKey<FilmActorRecord, FilmRecord> FK3FSUXQ0JJ1XONRE7BHROOPVBX = ForeignKeys0.FK3FSUXQ0JJ1XONRE7BHROOPVBX;
    public static final ForeignKey<FilmActorRecord, ActorRecord> FK43SD2F45W7YN0GAXQ94EHTWT2 = ForeignKeys0.FK43SD2F45W7YN0GAXQ94EHTWT2;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<ActorRecord, Integer> IDENTITY_ACTOR = Internal.createIdentity(Actor.ACTOR, Actor.ACTOR.ACTORID);
        public static Identity<FilmRecord, Integer> IDENTITY_FILM = Internal.createIdentity(Film.FILM, Film.FILM.FILMID);
        public static Identity<LanguageRecord, Integer> IDENTITY_LANGUAGE = Internal.createIdentity(Language.LANGUAGE, Language.LANGUAGE.LANGUAGEID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<ActorRecord> CONSTRAINT_3 = Internal.createUniqueKey(Actor.ACTOR, "CONSTRAINT_3", new TableField[] { Actor.ACTOR.ACTORID }, true);
        public static final UniqueKey<FilmRecord> CONSTRAINT_2 = Internal.createUniqueKey(Film.FILM, "CONSTRAINT_2", new TableField[] { Film.FILM.FILMID }, true);
        public static final UniqueKey<FilmActorRecord> CONSTRAINT_7 = Internal.createUniqueKey(FilmActor.FILM_ACTOR, "CONSTRAINT_7", new TableField[] { FilmActor.FILM_ACTOR.FILMS_FILMID, FilmActor.FILM_ACTOR.ACTORS_ACTORID }, true);
        public static final UniqueKey<LanguageRecord> CONSTRAINT_C = Internal.createUniqueKey(Language.LANGUAGE, "CONSTRAINT_C", new TableField[] { Language.LANGUAGE.LANGUAGEID }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<FilmRecord, LanguageRecord> FKD2YJC1RU34H1SMWLA3FX7B6NX = Internal.createForeignKey(Keys.CONSTRAINT_C, Film.FILM, "FKD2YJC1RU34H1SMWLA3FX7B6NX", new TableField[] { Film.FILM.LANGUAGE_LANGUAGEID }, true);
        public static final ForeignKey<FilmRecord, LanguageRecord> FKN2UB730RPO5B5E9X6U2LWL9FT = Internal.createForeignKey(Keys.CONSTRAINT_C, Film.FILM, "FKN2UB730RPO5B5E9X6U2LWL9FT", new TableField[] { Film.FILM.ORIGINALLANGUAGE_LANGUAGEID }, true);
        public static final ForeignKey<FilmActorRecord, FilmRecord> FK3FSUXQ0JJ1XONRE7BHROOPVBX = Internal.createForeignKey(Keys.CONSTRAINT_2, FilmActor.FILM_ACTOR, "FK3FSUXQ0JJ1XONRE7BHROOPVBX", new TableField[] { FilmActor.FILM_ACTOR.FILMS_FILMID }, true);
        public static final ForeignKey<FilmActorRecord, ActorRecord> FK43SD2F45W7YN0GAXQ94EHTWT2 = Internal.createForeignKey(Keys.CONSTRAINT_3, FilmActor.FILM_ACTOR, "FK43SD2F45W7YN0GAXQ94EHTWT2", new TableField[] { FilmActor.FILM_ACTOR.ACTORS_ACTORID }, true);
    }
}
